#!/usr/bin/env fish

# Configuration
set font_names \
    "LINESeed" \
    "Chonburi" \
    "CooperBlack" \
    "LEMONMILK" \
    "Notedry" \
    "'High Empathy'" \
    "'Playful Boxes'" \
    "'Super Kindly'"

# Helper Functions
function clean_font_pattern
    set pattern $argv[1]
    set pattern (string replace -a "'" "" $pattern)
    echo $pattern
end

function font_matches_pattern
    set font_basename $argv[1]
    set clean_pattern $argv[2]
    string match -q "*$clean_pattern*" $font_basename
end

function is_font_managed_by_chezmoi
    set font_file $argv[1]
    set chezmoi_source_path (chezmoi source-path $font_file 2>/dev/null)
    test -f "$chezmoi_source_path"
end

function find_matching_pattern
    set font_basename $argv[1]
    
    for font_pattern in $font_names
        set clean_pattern (clean_font_pattern $font_pattern)
        if font_matches_pattern $font_basename $clean_pattern
            echo $clean_pattern
            return 0
        end
    end
    return 1
end

function display_font_group
    set font_list $argv[1..-3]
    set group_title $argv[-2]
    set color_code $argv[-1]
    
    if test (count $font_list) -gt 0
        echo $group_title
        
        # Group fonts by pattern
        for font_pattern in $font_names
            set clean_pattern (clean_font_pattern $font_pattern)
            set pattern_fonts
            
            # Find fonts that match this pattern
            for font in $font_list
                if font_matches_pattern $font $clean_pattern
                    set pattern_fonts $pattern_fonts $font
                end
            end
            
            # Print pattern group if fonts found
            if test (count $pattern_fonts) -gt 0
                # Brown bold for wildcard pattern
                echo -e "\033[1;33m$clean_pattern*\033[0m"
                # Color for font basenames
                echo -e "$color_code"(string join ", " $pattern_fonts)"\033[0m"
                echo
            end
        end
    end
end

function backup_configs
    echo "Backing up Ghostty, mise & starship configs"
    chezmoi add ~/.config/ghostty/
    chezmoi add ~/.config/mise/
    chezmoi add ~/.config/starship.toml
end

function backup_homebrew
    echo "Backing up Homebrew (formula, casks, mas)"
    set homebrew_dir ~/.local/share/chezmoi/chezmoi/dot_application-config/homebrew
    
    brew leaves > $homebrew_dir/brew-formula.txt
    brew list --cask > $homebrew_dir/brew-casks.txt
    mas list > $homebrew_dir/mas-list.txt
end

function process_fonts
    echo "Backing up fonts..."
    echo
    
    set managed_fonts
    set added_fonts
    
    # Process each font file
    for font_file in ~/Library/Fonts/*
        if not test -f $font_file
            continue
        end
        
        set font_basename (basename $font_file)
        set matching_pattern (find_matching_pattern $font_basename)
        
        if test $status -eq 0
            if is_font_managed_by_chezmoi $font_file
                set managed_fonts $managed_fonts $font_basename
            else
                chezmoi add $font_file
                set added_fonts $added_fonts $font_basename
            end
        end
    end
    
    # Display results with original colors
    display_font_group $managed_fonts "Fonts already managed by chezmoi:" "\033[34m"
    display_font_group $added_fonts "Added fonts:" "\033[32m"
    
    check_missing_patterns
end

function check_missing_patterns
    for font_pattern in $font_names
        set clean_pattern (clean_font_pattern $font_pattern)
        set found false
        
        for font_file in ~/Library/Fonts/*
            if test -f $font_file
                set font_basename (basename $font_file)
                if font_matches_pattern $font_basename $clean_pattern
                    set found true
                    break
                end
            end
        end
        
        if test $found = false
            echo -e "No fonts found matching pattern: \033[31m$font_pattern\033[0m"
        end
    end
end

# Main execution
function main
    echo "Starting backup process..."
    
    backup_configs
    backup_homebrew
    process_fonts
    
    echo "Backup completed!"
end

# Run main function
main
